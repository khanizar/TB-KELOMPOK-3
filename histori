import tkinter as tk
from tkinter import ttk
from tkinter import messagebox
import json
import main_histori

# Fungsi untuk memuat data pengguna dari file
def load_users():
    try:
        with open('users.json', 'r') as file:
            return json.load(file)
    except FileNotFoundError:
        return {
            "admin": {"password": "1234", "history": []},
            "aqil": {"password": "abcd", "history": []}
        }

# Fungsi untuk menyimpan data pengguna ke file
def save_users(users):
    with open('users.json', 'w') as file:
        json.dump(users, file)

class StackGUI:
    def __init__(self, master, username):
        self.master = master
        self.username = username
        self.master.title("Riwayat Tontonan")
        self.master.geometry("600x650")
        self.master.resizable(False,False)

        self.style = ttk.Style()
        self.style.theme_use("clam")
        self.style.configure("TFrame", background="#2e3f4f")
        self.style.configure("TLabel", background="#2e3f4f", foreground="white", font=("Helvetica", 12))
        self.style.configure("TButton", background="#4a6fa5", foreground="white", font=("Helvetica", 10, "bold"))
        self.style.configure("TEntry", padding=5)
        
        self.frame = ttk.Frame(master, padding=20)
        self.frame.pack(fill=tk.BOTH, expand=True)

        self.users = load_users()
        self.stack = self.users[username]["history"]

        self.stack_label = ttk.Label(self.frame, text="Histori:", font=("Helvetica", 16))
        self.stack_label.pack(pady=10)

        self.nama_menu = ttk.Frame(self.frame)
        self.nama_film = ttk.Label(self.nama_menu, text="Nama Film")
        self.durasi = ttk.Label(self.nama_menu,text="Durasi Film")
        self.waktu = ttk.Label(self.nama_menu,text="Jam")

        self.nama_film.pack(side="left", padx=(0,60))
        self.durasi.pack(side="left", padx=(40,50))
        self.waktu.pack(side="left", padx=(60,0))
        self.nama_menu.pack()

        self.stack_text = tk.Text(self.frame, height=15, width=55, bg="#f0f0f0", state=tk.DISABLED)
        self.stack_text.pack(pady=10)

        self.entry_label = ttk.Label(self.frame, text="Apa yang mau ditonton:")
        self.entry_label.pack(pady=5)
        self.entry = ttk.Entry(self.frame, width=40)
        self.entry.pack(pady=5)
        
        self.entry_label = ttk.Label(self.frame, text="Masukan Durasi:")
        self.entry_label.pack(pady=5)
        self.entry_durasi = ttk.Entry(self.frame, width=40)
        self.entry_durasi.pack(pady=5)
        
        self.entry_label = ttk.Label(self.frame, text="Masukan Jam Saat Ini:")
        self.entry_label.pack(pady=5)
        self.entry_jam = ttk.Entry(self.frame, width=40)
        self.entry_jam.pack(pady=5)


        self.button_frame = ttk.Frame(self.frame)
        self.button_frame.pack(pady=10)

        self.push_button = ttk.Button(self.button_frame, text="Tonton Sekarang", command=self.push)
        self.push_button.grid(row=0, column=0, padx=5)

        self.pop_button = ttk.Button(self.button_frame, text="Hapus Tontonan", command=self.pop)
        self.pop_button.grid(row=0, column=1, padx=5)
        
        self.logout_button = ttk.Button(self.button_frame, text="Logout", command=self.logout)
        self.logout_button.grid(row=0, column=2, padx=5)
        

        self.update_stack_display()
        

            

    def push(self):
        value = self.entry.get() +" "*15+ self.entry_durasi.get() +" "*15+ self.entry_jam.get()  
        if value:
            self.stack.append(value)
            self.entry.delete(0, tk.END)
            self.entry_durasi.delete(0, tk.END)
            self.entry_jam.delete(0, tk.END)
            self.update_stack_display()
            self.save_history()

    def pop(self):
        if self.stack:
            self.stack.pop()
            self.update_stack_display()
            self.save_history()

    def update_stack_display(self):
        self.stack_text.config(state=tk.NORMAL)
        self.stack_text.delete(1.0, tk.END)
        for item in reversed(self.stack):
            self.stack_text.insert(tk.END, item + '\n')
        self.stack_text.config(state=tk.DISABLED)

    def save_history(self):
        self.users[self.username]["history"] = self.stack
        save_users(self.users)

    def logout(self):
        self.master.destroy()
        root = tk.Tk()
        login_gui = main_histori.LoginGUI(root)
        root.mainloop()

